package com.akshay.textstyle.fragments

import android.annotation.SuppressLint
import android.app.Activity
import android.content.Context
import android.os.Bundle
import android.text.Editable
import android.text.TextWatcher
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.EditText
import androidx.fragment.app.Fragment
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.akshay.textstyle.R
import com.akshay.textstyle.adapter.DecorationAdapter
import com.akshay.textstyle.model.Font


@Suppress("UNREACHABLE_CODE")
class DecorationFragment : Fragment() {

    @SuppressLint("NotConstructor")
    fun DecorationFragment() {
        // Required empty public constructor
    }

    private var context: Activity? = null
    private var fontsRV: RecyclerView? = null
    private val decorationFonts: ArrayList<Font> = ArrayList()
    private var editText: EditText? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
    }

    @SuppressLint("UseRequireInsteadOfGet")
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?,
    ): View? {
        // Inflate the layout for this fragment
        val view = inflater.inflate(R.layout.fragment_decoration, container, false)

        if (decorationFonts.isEmpty()) {
            val f1 = Font("Decoration 1")
            val f2 = Font("Decoration 2")
            val f3 = Font("Decoration 3")
            val f4 = Font("Decoration 4")
            val f5 = Font("Decoration 5")
            val f6 = Font("Decoration 6")
            val f7 = Font("Decoration 7")
            val f8 = Font("Decoration 8")
            val f9 = Font("Decoration 9")
            val f10 = Font("Decoration 10")
            val f11 = Font("Decoration 11")
            val f12 = Font("Decoration 12")
            val f13 = Font("Decoration 13")
            val f14 = Font("Decoration 14")
            val f15 = Font("Decoration 15")
            val f16 = Font("Decoration 16")
            val f17 = Font("Decoration 17")
            val f18 = Font("Decoration 18")
            val f19 = Font("Decoration 19")
            val f20 = Font("Decoration 20")
            val f21 = Font("Decoration 21")
            val f22 = Font("Decoration 22")
            val f23 = Font("Decoration 23")
            val f24 = Font("Decoration 24")
            val f25 = Font("Decoration 25")
            val f26 = Font("Decoration 26")
            val f27 = Font("Decoration 27")
            val f28 = Font("Decoration 28")
            val f29 = Font("Decoration 29")
            val f30 = Font("Decoration 30")
            val f31 = Font("Decoration 31")
            val f32 = Font("Decoration 32")
            val f33 = Font("Decoration 33")
            val f34 = Font("Decoration 34")
            val f35 = Font("Decoration 35")
            val f36 = Font("Decoration 36")
            val f37 = Font("Decoration 37")
            val f38 = Font("Decoration 38")
            val f39 = Font("Decoration 39")
            val f40 = Font("Decoration 40")
            val f41 = Font("Decoration 41")
            val f42 = Font("Decoration 42")
            val f43 = Font("Decoration 43")
            val f44 = Font("Decoration 44")
            val f45 = Font("Decoration 45")
            val f46 = Font("Decoration 46")
            val f47 = Font("Decoration 47")
            val f48 = Font("Decoration 48")
            val f49 = Font("Decoration 49")
            val f50 = Font("Decoration 50")
            val f51 = Font("Decoration 51")
            val f52 = Font("Decoration 52")
            val f53 = Font("Decoration 53")
            val f54 = Font("Decoration 54")
            val f55 = Font("Decoration 55")
            val f56 = Font("Decoration 56")
            val f57 = Font("Decoration 57")
            val f58 = Font("Decoration 58")
            val f59 = Font("Decoration 59")
            val f60 = Font("Decoration 60")
            val f61 = Font("Decoration 61")
            val f62 = Font("Decoration 62")
            val f63 = Font("Decoration 63")
            val f64 = Font("Decoration 64")
            val f65 = Font("Decoration 65")
            val f66 = Font("Decoration 66")
            val f67 = Font("Decoration 67")
            val f68 = Font("Decoration 68")
            val f69 = Font("Decoration 69")
            val f70 = Font("Decoration 70")
            val f71 = Font("Decoration 71")
            val f72 = Font("Decoration 72")
            val f73 = Font("Decoration 73")
            val f74 = Font("Decoration 74")
            val f75 = Font("Decoration 75")
            val f76 = Font("Decoration 76")
            val f77 = Font("Decoration 77")
            val f78 = Font("Decoration 78")
            val f79 = Font("Decoration 79")
            val f80 = Font("Decoration 80")
            val f81 = Font("Decoration 81")
            val f82 = Font("Decoration 82")
            val f83 = Font("Decoration 83")
            val f84 = Font("Decoration 84")
            val f85 = Font("Decoration 85")
            val f86 = Font("Decoration 86")
            val f87 = Font("Decoration 87")
            val f88 = Font("Decoration 88")
            val f89 = Font("Decoration 89")
            val f90 = Font("Decoration 90")
            val f91 = Font("Decoration 91")
            val f92 = Font("Decoration 92")
            val f93 = Font("Decoration 93")
            val f94 = Font("Decoration 94")
            val f95 = Font("Decoration 95")
            val f96 = Font("Decoration 96")
            val f97 = Font("Decoration 97")
            val f98 = Font("Decoration 98")
            val f99 = Font("Decoration 99")
            decorationFonts.add(f1)
            decorationFonts.add(f2)
            decorationFonts.add(f3)
            decorationFonts.add(f4)
            decorationFonts.add(f5)
            decorationFonts.add(f6)
            decorationFonts.add(f7)
            decorationFonts.add(f8)
            decorationFonts.add(f9)
            decorationFonts.add(f10)
            decorationFonts.add(f11)
            decorationFonts.add(f12)
            decorationFonts.add(f13)
            decorationFonts.add(f14)
            decorationFonts.add(f15)
            decorationFonts.add(f16)
            decorationFonts.add(f17)
            decorationFonts.add(f18)
            decorationFonts.add(f19)
            decorationFonts.add(f20)
            decorationFonts.add(f21)
            decorationFonts.add(f22)
            decorationFonts.add(f23)
            decorationFonts.add(f24)
            decorationFonts.add(f25)
            decorationFonts.add(f26)
            decorationFonts.add(f27)
            decorationFonts.add(f28)
            decorationFonts.add(f29)
            decorationFonts.add(f30)
            decorationFonts.add(f31)
            decorationFonts.add(f32)
            decorationFonts.add(f33)
            decorationFonts.add(f34)
            decorationFonts.add(f35)
            decorationFonts.add(f36)
            decorationFonts.add(f37)
            decorationFonts.add(f38)
            decorationFonts.add(f39)
            decorationFonts.add(f40)
            decorationFonts.add(f41)
            decorationFonts.add(f42)
            decorationFonts.add(f43)
            decorationFonts.add(f44)
            decorationFonts.add(f45)
            decorationFonts.add(f46)
            decorationFonts.add(f47)
            decorationFonts.add(f48)
            decorationFonts.add(f49)
            decorationFonts.add(f50)
            decorationFonts.add(f51)
            decorationFonts.add(f52)
            decorationFonts.add(f53)
            decorationFonts.add(f54)
            decorationFonts.add(f55)
            decorationFonts.add(f56)
            decorationFonts.add(f57)
            decorationFonts.add(f58)
            decorationFonts.add(f59)
            decorationFonts.add(f60)
            decorationFonts.add(f61)
            decorationFonts.add(f62)
            decorationFonts.add(f63)
            decorationFonts.add(f64)
            decorationFonts.add(f65)
            decorationFonts.add(f66)
            decorationFonts.add(f67)
            decorationFonts.add(f68)
            decorationFonts.add(f69)
            decorationFonts.add(f70)
            decorationFonts.add(f71)
            decorationFonts.add(f72)
            decorationFonts.add(f73)
            decorationFonts.add(f74)
            decorationFonts.add(f75)
            decorationFonts.add(f76)
            decorationFonts.add(f77)
            decorationFonts.add(f78)
            decorationFonts.add(f79)
            decorationFonts.add(f80)
            decorationFonts.add(f81)
            decorationFonts.add(f82)
            decorationFonts.add(f83)
            decorationFonts.add(f84)
            decorationFonts.add(f85)
            decorationFonts.add(f86)
            decorationFonts.add(f87)
            decorationFonts.add(f88)
            decorationFonts.add(f89)
            decorationFonts.add(f90)
            decorationFonts.add(f91)
            decorationFonts.add(f92)
            decorationFonts.add(f93)
            decorationFonts.add(f94)
            decorationFonts.add(f95)
            decorationFonts.add(f96)
            decorationFonts.add(f97)
            decorationFonts.add(f98)
            decorationFonts.add(f99)
        } else {
            decorationFonts.clear()
            val f1 = Font("Decoration 1")
            val f2 = Font("Decoration 2")
            val f3 = Font("Decoration 3")
            val f4 = Font("Decoration 4")
            val f5 = Font("Decoration 5")
            val f6 = Font("Decoration 6")
            val f7 = Font("Decoration 7")
            val f8 = Font("Decoration 8")
            val f9 = Font("Decoration 9")
            val f10 = Font("Decoration 10")
            val f11 = Font("Decoration 11")
            val f12 = Font("Decoration 12")
            val f13 = Font("Decoration 13")
            val f14 = Font("Decoration 14")
            val f15 = Font("Decoration 15")
            val f16 = Font("Decoration 16")
            val f17 = Font("Decoration 17")
            val f18 = Font("Decoration 18")
            val f19 = Font("Decoration 19")
            val f20 = Font("Decoration 20")
            val f21 = Font("Decoration 21")
            val f22 = Font("Decoration 22")
            val f23 = Font("Decoration 23")
            val f24 = Font("Decoration 24")
            val f25 = Font("Decoration 25")
            val f26 = Font("Decoration 26")
            val f27 = Font("Decoration 27")
            val f28 = Font("Decoration 28")
            val f29 = Font("Decoration 29")
            val f30 = Font("Decoration 30")
            val f31 = Font("Decoration 31")
            val f32 = Font("Decoration 32")
            val f33 = Font("Decoration 33")
            val f34 = Font("Decoration 34")
            val f35 = Font("Decoration 35")
            val f36 = Font("Decoration 36")
            val f37 = Font("Decoration 37")
            val f38 = Font("Decoration 38")
            val f39 = Font("Decoration 39")
            val f40 = Font("Decoration 40")
            val f41 = Font("Decoration 41")
            val f42 = Font("Decoration 42")
            val f43 = Font("Decoration 43")
            val f44 = Font("Decoration 44")
            val f45 = Font("Decoration 45")
            val f46 = Font("Decoration 46")
            val f47 = Font("Decoration 47")
            val f48 = Font("Decoration 48")
            val f49 = Font("Decoration 49")
            val f50 = Font("Decoration 50")
            val f51 = Font("Decoration 51")
            val f52 = Font("Decoration 52")
            val f53 = Font("Decoration 53")
            val f54 = Font("Decoration 54")
            val f55 = Font("Decoration 55")
            val f56 = Font("Decoration 56")
            val f57 = Font("Decoration 57")
            val f58 = Font("Decoration 58")
            val f59 = Font("Decoration 59")
            val f60 = Font("Decoration 60")
            val f61 = Font("Decoration 61")
            val f62 = Font("Decoration 62")
            val f63 = Font("Decoration 63")
            val f64 = Font("Decoration 64")
            val f65 = Font("Decoration 65")
            val f66 = Font("Decoration 66")
            val f67 = Font("Decoration 67")
            val f68 = Font("Decoration 68")
            val f69 = Font("Decoration 69")
            val f70 = Font("Decoration 70")
            val f71 = Font("Decoration 71")
            val f72 = Font("Decoration 72")
            val f73 = Font("Decoration 73")
            val f74 = Font("Decoration 74")
            val f75 = Font("Decoration 75")
            val f76 = Font("Decoration 76")
            val f77 = Font("Decoration 77")
            val f78 = Font("Decoration 78")
            val f79 = Font("Decoration 79")
            val f80 = Font("Decoration 80")
            val f81 = Font("Decoration 81")
            val f82 = Font("Decoration 82")
            val f83 = Font("Decoration 83")
            val f84 = Font("Decoration 84")
            val f85 = Font("Decoration 85")
            val f86 = Font("Decoration 86")
            val f87 = Font("Decoration 87")
            val f88 = Font("Decoration 88")
            val f89 = Font("Decoration 89")
            val f90 = Font("Decoration 90")
            val f91 = Font("Decoration 91")
            val f92 = Font("Decoration 92")
            val f93 = Font("Decoration 93")
            val f94 = Font("Decoration 94")
            val f95 = Font("Decoration 95")
            val f96 = Font("Decoration 96")
            val f97 = Font("Decoration 97")
            val f98 = Font("Decoration 98")
            val f99 = Font("Decoration 99")
            decorationFonts.add(f1)
            decorationFonts.add(f2)
            decorationFonts.add(f3)
            decorationFonts.add(f4)
            decorationFonts.add(f5)
            decorationFonts.add(f6)
            decorationFonts.add(f7)
            decorationFonts.add(f8)
            decorationFonts.add(f9)
            decorationFonts.add(f10)
            decorationFonts.add(f11)
            decorationFonts.add(f12)
            decorationFonts.add(f13)
            decorationFonts.add(f14)
            decorationFonts.add(f15)
            decorationFonts.add(f16)
            decorationFonts.add(f17)
            decorationFonts.add(f18)
            decorationFonts.add(f19)
            decorationFonts.add(f20)
            decorationFonts.add(f21)
            decorationFonts.add(f22)
            decorationFonts.add(f23)
            decorationFonts.add(f24)
            decorationFonts.add(f25)
            decorationFonts.add(f26)
            decorationFonts.add(f27)
            decorationFonts.add(f28)
            decorationFonts.add(f29)
            decorationFonts.add(f30)
            decorationFonts.add(f31)
            decorationFonts.add(f32)
            decorationFonts.add(f33)
            decorationFonts.add(f34)
            decorationFonts.add(f35)
            decorationFonts.add(f36)
            decorationFonts.add(f37)
            decorationFonts.add(f38)
            decorationFonts.add(f39)
            decorationFonts.add(f40)
            decorationFonts.add(f41)
            decorationFonts.add(f42)
            decorationFonts.add(f43)
            decorationFonts.add(f44)
            decorationFonts.add(f45)
            decorationFonts.add(f46)
            decorationFonts.add(f47)
            decorationFonts.add(f48)
            decorationFonts.add(f49)
            decorationFonts.add(f50)
            decorationFonts.add(f51)
            decorationFonts.add(f52)
            decorationFonts.add(f53)
            decorationFonts.add(f54)
            decorationFonts.add(f55)
            decorationFonts.add(f56)
            decorationFonts.add(f57)
            decorationFonts.add(f58)
            decorationFonts.add(f59)
            decorationFonts.add(f60)
            decorationFonts.add(f61)
            decorationFonts.add(f62)
            decorationFonts.add(f63)
            decorationFonts.add(f64)
            decorationFonts.add(f65)
            decorationFonts.add(f66)
            decorationFonts.add(f67)
            decorationFonts.add(f68)
            decorationFonts.add(f69)
            decorationFonts.add(f70)
            decorationFonts.add(f71)
            decorationFonts.add(f72)
            decorationFonts.add(f73)
            decorationFonts.add(f74)
            decorationFonts.add(f75)
            decorationFonts.add(f76)
            decorationFonts.add(f77)
            decorationFonts.add(f78)
            decorationFonts.add(f79)
            decorationFonts.add(f80)
            decorationFonts.add(f81)
            decorationFonts.add(f82)
            decorationFonts.add(f83)
            decorationFonts.add(f84)
            decorationFonts.add(f85)
            decorationFonts.add(f86)
            decorationFonts.add(f87)
            decorationFonts.add(f88)
            decorationFonts.add(f89)
            decorationFonts.add(f90)
            decorationFonts.add(f91)
            decorationFonts.add(f92)
            decorationFonts.add(f93)
            decorationFonts.add(f94)
            decorationFonts.add(f95)
            decorationFonts.add(f96)
            decorationFonts.add(f97)
            decorationFonts.add(f98)
            decorationFonts.add(f99)
        }

        fontsRV = view.findViewById(R.id.recycle_view_DF)

        val adapter = DecorationAdapter(decorationFonts, context)
        with(fontsRV){
            this?.layoutManager = LinearLayoutManager(context)
            this?.adapter = adapter
        }
      /*  fontsRV.layoutManager = LinearLayoutManager(context)
        fontsRV.adapter = adapter*/

        editText = view.findViewById(R.id.edit_text_DF)
        with(editText){
            this?.addTextChangedListener(object : TextWatcher {
                override fun afterTextChanged(s: Editable) {}
                override fun beforeTextChanged(s: CharSequence, start: Int, count: Int, after: Int) {}
                override fun onTextChanged(s: CharSequence, start: Int, before: Int, count: Int) {
                    var editTextStr = getText().toString()
                    if (editTextStr.isEmpty()) {
                        editTextStr = "Preview text"
                    }
                    for (item in decorationFonts.indices) {
                        decorationFonts[item].setPreviewText(editTextStr)
                        adapter.notifyDataSetChanged()
                    }
                }
            })
        }
        return view
    }

    override fun onAttach(context: Context) {
        super.onAttach(requireContext())
        this.context = context as Activity?
    }
}