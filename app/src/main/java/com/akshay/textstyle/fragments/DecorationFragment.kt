package com.akshay.textstyle.fragments

import android.annotation.SuppressLint
import android.app.Activity
import android.content.Context
import android.os.Bundle
import android.text.Editable
import android.text.TextWatcher
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.EditText
import androidx.fragment.app.Fragment
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import com.akshay.textstyle.R
import com.akshay.textstyle.adapter.DecorationAdapter
import com.akshay.textstyle.model.Font


@Suppress("UNREACHABLE_CODE")
class DecorationFragment : Fragment() {

    @SuppressLint("NotConstructor")
    fun DecorationFragment() {
        // Required empty public constructor
    }

    private var context: Activity? = null
    private var fontsRV: RecyclerView? = null
    private val decorationFonts: ArrayList<Font> = ArrayList()
    private var editText: EditText? = null

    @SuppressLint("UseRequireInsteadOfGet")
    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?,
    ): View? {
        // Inflate the layout for this fragment
        val view = inflater.inflate(R.layout.fragment_decoration, container, false)

        /*if (decorationFonts.isEmpty()) {
            val f1 = Font()
            val f2 = Font()
            val f3 = Font()
            val f4 = Font()
            val f5 = Font()
            val f6 = Font()
            val f7 = Font()
            val f8 = Font()
            val f9 = Font()
            val f10 = Font()
            val f11 = Font()
            val f12 = Font()
            val f13 = Font()
            val f14 = Font()
            val f15 = Font()
            val f16 = Font()
            val f17 = Font()
            val f18 = Font()
            val f19 = Font()
            val f20 = Font()
            val f21 = Font()
            val f22 = Font()
            val f23 = Font()
            val f24 = Font()
            val f25 = Font()
            val f26 = Font()
            val f27 = Font()
            val f28 = Font()
            val f29 = Font()
            val f30 = Font()
            val f31 = Font()
            val f32 = Font()
            val f33 = Font()
            val f34 = Font()
            val f35 = Font()
            val f36 = Font()
            val f37 = Font()
            val f38 = Font()
            val f39 = Font()
            val f40 = Font()
            val f41 = Font()
            val f42 = Font()
            val f43 = Font()
            val f44 = Font()
            val f45 = Font()
            val f46 = Font()
            val f47 = Font()
            val f48 = Font()
            val f49 = Font()
            val f50 = Font()
            val f51 = Font()
            val f52 = Font()
            val f53 = Font()
            val f54 = Font()
            val f55 = Font()
            val f56 = Font()
            val f57 = Font()
            val f58 = Font()
            val f59 = Font()
            val f60 = Font()
            val f61 = Font()
            val f62 = Font()
            val f63 = Font()
            val f64 = Font()
            val f65 = Font()
            val f66 = Font()
            val f67 = Font()
            val f68 = Font()
            val f69 = Font()
            val f70 = Font()
            val f71 = Font()
            val f72 = Font()
            val f73 = Font()
            val f74 = Font()
            val f75 = Font()
            val f76 = Font()
            val f77 = Font()
            val f78 = Font()
            val f79 = Font()
            val f80 = Font()
            val f81 = Font()
            val f82 = Font()
            val f83 = Font()
            val f84 = Font()
            val f85 = Font()
            val f86 = Font()
            val f87 = Font()
            val f88 = Font()
            val f89 = Font()
            val f90 = Font()
            val f91 = Font()
            val f92 = Font()
            val f93 = Font()
            val f94 = Font()
            val f95 = Font()
            val f96 = Font()
            val f97 = Font()
            val f98 = Font()
            val f99 = Font()
            decorationFonts.add(f1)
            decorationFonts.add(f2)
            decorationFonts.add(f3)
            decorationFonts.add(f4)
            decorationFonts.add(f5)
            decorationFonts.add(f6)
            decorationFonts.add(f7)
            decorationFonts.add(f8)
            decorationFonts.add(f9)
            decorationFonts.add(f10)
            decorationFonts.add(f11)
            decorationFonts.add(f12)
            decorationFonts.add(f13)
            decorationFonts.add(f14)
            decorationFonts.add(f15)
            decorationFonts.add(f16)
            decorationFonts.add(f17)
            decorationFonts.add(f18)
            decorationFonts.add(f19)
            decorationFonts.add(f20)
            decorationFonts.add(f21)
            decorationFonts.add(f22)
            decorationFonts.add(f23)
            decorationFonts.add(f24)
            decorationFonts.add(f25)
            decorationFonts.add(f26)
            decorationFonts.add(f27)
            decorationFonts.add(f28)
            decorationFonts.add(f29)
            decorationFonts.add(f30)
            decorationFonts.add(f31)
            decorationFonts.add(f32)
            decorationFonts.add(f33)
            decorationFonts.add(f34)
            decorationFonts.add(f35)
            decorationFonts.add(f36)
            decorationFonts.add(f37)
            decorationFonts.add(f38)
            decorationFonts.add(f39)
            decorationFonts.add(f40)
            decorationFonts.add(f41)
            decorationFonts.add(f42)
            decorationFonts.add(f43)
            decorationFonts.add(f44)
            decorationFonts.add(f45)
            decorationFonts.add(f46)
            decorationFonts.add(f47)
            decorationFonts.add(f48)
            decorationFonts.add(f49)
            decorationFonts.add(f50)
            decorationFonts.add(f51)
            decorationFonts.add(f52)
            decorationFonts.add(f53)
            decorationFonts.add(f54)
            decorationFonts.add(f55)
            decorationFonts.add(f56)
            decorationFonts.add(f57)
            decorationFonts.add(f58)
            decorationFonts.add(f59)
            decorationFonts.add(f60)
            decorationFonts.add(f61)
            decorationFonts.add(f62)
            decorationFonts.add(f63)
            decorationFonts.add(f64)
            decorationFonts.add(f65)
            decorationFonts.add(f66)
            decorationFonts.add(f67)
            decorationFonts.add(f68)
            decorationFonts.add(f69)
            decorationFonts.add(f70)
            decorationFonts.add(f71)
            decorationFonts.add(f72)
            decorationFonts.add(f73)
            decorationFonts.add(f74)
            decorationFonts.add(f75)
            decorationFonts.add(f76)
            decorationFonts.add(f77)
            decorationFonts.add(f78)
            decorationFonts.add(f79)
            decorationFonts.add(f80)
            decorationFonts.add(f81)
            decorationFonts.add(f82)
            decorationFonts.add(f83)
            decorationFonts.add(f84)
            decorationFonts.add(f85)
            decorationFonts.add(f86)
            decorationFonts.add(f87)
            decorationFonts.add(f88)
            decorationFonts.add(f89)
            decorationFonts.add(f90)
            decorationFonts.add(f91)
            decorationFonts.add(f92)
            decorationFonts.add(f93)
            decorationFonts.add(f94)
            decorationFonts.add(f95)
            decorationFonts.add(f96)
            decorationFonts.add(f97)
            decorationFonts.add(f98)
            decorationFonts.add(f99)
        }
        else {
            decorationFonts.clear()
            val f1 = Font()
            val f2 = Font()
            val f3 = Font()
            val f4 = Font()
            val f5 = Font()
            val f6 = Font()
            val f7 = Font()
            val f8 = Font()
            val f9 = Font()
            val f10 = Font()
            val f11 = Font()
            val f12 = Font()
            val f13 = Font()
            val f14 = Font()
            val f15 = Font()
            val f16 = Font()
            val f17 = Font()
            val f18 = Font()
            val f19 = Font()
            val f20 = Font()
            val f21 = Font()
            val f22 = Font()
            val f23 = Font()
            val f24 = Font()
            val f25 = Font()
            val f26 = Font()
            val f27 = Font()
            val f28 = Font()
            val f29 = Font()
            val f30 = Font()
            val f31 = Font()
            val f32 = Font()
            val f33 = Font()
            val f34 = Font()
            val f35 = Font()
            val f36 = Font()
            val f37 = Font()
            val f38 = Font()
            val f39 = Font()
            val f40 = Font()
            val f41 = Font()
            val f42 = Font()
            val f43 = Font()
            val f44 = Font()
            val f45 = Font()
            val f46 = Font()
            val f47 = Font()
            val f48 = Font()
            val f49 = Font()
            val f50 = Font()
            val f51 = Font()
            val f52 = Font()
            val f53 = Font()
            val f54 = Font()
            val f55 = Font()
            val f56 = Font()
            val f57 = Font()
            val f58 = Font()
            val f59 = Font()
            val f60 = Font()
            val f61 = Font()
            val f62 = Font()
            val f63 = Font()
            val f64 = Font()
            val f65 = Font()
            val f66 = Font()
            val f67 = Font()
            val f68 = Font()
            val f69 = Font()
            val f70 = Font()
            val f71 = Font()
            val f72 = Font()
            val f73 = Font()
            val f74 = Font()
            val f75 = Font()
            val f76 = Font()
            val f77 = Font()
            val f78 = Font()
            val f79 = Font()
            val f80 = Font()
            val f81 = Font()
            val f82 = Font()
            val f83 = Font()
            val f84 = Font()
            val f85 = Font()
            val f86 = Font()
            val f87 = Font()
            val f88 = Font()
            val f89 = Font()
            val f90 = Font()
            val f91 = Font()
            val f92 = Font()
            val f93 = Font()
            val f94 = Font()
            val f95 = Font()
            val f96 = Font()
            val f97 = Font()
            val f98 = Font()
            val f99 = Font()
            decorationFonts.add(f1)
            decorationFonts.add(f2)
            decorationFonts.add(f3)
            decorationFonts.add(f4)
            decorationFonts.add(f5)
            decorationFonts.add(f6)
            decorationFonts.add(f7)
            decorationFonts.add(f8)
            decorationFonts.add(f9)
            decorationFonts.add(f10)
            decorationFonts.add(f11)
            decorationFonts.add(f12)
            decorationFonts.add(f13)
            decorationFonts.add(f14)
            decorationFonts.add(f15)
            decorationFonts.add(f16)
            decorationFonts.add(f17)
            decorationFonts.add(f18)
            decorationFonts.add(f19)
            decorationFonts.add(f20)
            decorationFonts.add(f21)
            decorationFonts.add(f22)
            decorationFonts.add(f23)
            decorationFonts.add(f24)
            decorationFonts.add(f25)
            decorationFonts.add(f26)
            decorationFonts.add(f27)
            decorationFonts.add(f28)
            decorationFonts.add(f29)
            decorationFonts.add(f30)
            decorationFonts.add(f31)
            decorationFonts.add(f32)
            decorationFonts.add(f33)
            decorationFonts.add(f34)
            decorationFonts.add(f35)
            decorationFonts.add(f36)
            decorationFonts.add(f37)
            decorationFonts.add(f38)
            decorationFonts.add(f39)
            decorationFonts.add(f40)
            decorationFonts.add(f41)
            decorationFonts.add(f42)
            decorationFonts.add(f43)
            decorationFonts.add(f44)
            decorationFonts.add(f45)
            decorationFonts.add(f46)
            decorationFonts.add(f47)
            decorationFonts.add(f48)
            decorationFonts.add(f49)
            decorationFonts.add(f50)
            decorationFonts.add(f51)
            decorationFonts.add(f52)
            decorationFonts.add(f53)
            decorationFonts.add(f54)
            decorationFonts.add(f55)
            decorationFonts.add(f56)
            decorationFonts.add(f57)
            decorationFonts.add(f58)
            decorationFonts.add(f59)
            decorationFonts.add(f60)
            decorationFonts.add(f61)
            decorationFonts.add(f62)
            decorationFonts.add(f63)
            decorationFonts.add(f64)
            decorationFonts.add(f65)
            decorationFonts.add(f66)
            decorationFonts.add(f67)
            decorationFonts.add(f68)
            decorationFonts.add(f69)
            decorationFonts.add(f70)
            decorationFonts.add(f71)
            decorationFonts.add(f72)
            decorationFonts.add(f73)
            decorationFonts.add(f74)
            decorationFonts.add(f75)
            decorationFonts.add(f76)
            decorationFonts.add(f77)
            decorationFonts.add(f78)
            decorationFonts.add(f79)
            decorationFonts.add(f80)
            decorationFonts.add(f81)
            decorationFonts.add(f82)
            decorationFonts.add(f83)
            decorationFonts.add(f84)
            decorationFonts.add(f85)
            decorationFonts.add(f86)
            decorationFonts.add(f87)
            decorationFonts.add(f88)
            decorationFonts.add(f89)
            decorationFonts.add(f90)
            decorationFonts.add(f91)
            decorationFonts.add(f92)
            decorationFonts.add(f93)
            decorationFonts.add(f94)
            decorationFonts.add(f95)
            decorationFonts.add(f96)
            decorationFonts.add(f97)
            decorationFonts.add(f98)
            decorationFonts.add(f99)
        }*/

        if (decorationFonts.isEmpty()) {
            repeat(99) {
                decorationFonts.add(Font())
            }
        } else {
            decorationFonts.clear()
            repeat(99) {
                decorationFonts.add(Font())
            }
        }
        fontsRV = view.findViewById(R.id.recycle_view_DF)

        val adapter = DecorationAdapter(decorationFonts, context)
        with(fontsRV){
            this?.layoutManager = LinearLayoutManager(context)
            this?.adapter = adapter
        }
      /*  fontsRV.layoutManager = LinearLayoutManager(context)
        fontsRV.adapter = adapter*/

        editText = activity?.findViewById(R.id.edit_text_main)
        with(editText){
            this?.addTextChangedListener(object : TextWatcher {
                override fun afterTextChanged(s: Editable) {}
                override fun beforeTextChanged(s: CharSequence, start: Int, count: Int, after: Int) {}
                override fun onTextChanged(s: CharSequence, start: Int, before: Int, count: Int) {
                    //var editTextStr =text.toString()
                    updateDecorationFonts(s.toString())
                    adapter.notifyDataSetChanged()

                    /* if (editTextStr.isEmpty()) {
                         editTextStr = "hey!"
                     }
                     for (item in decorationFonts.indices) {
                         decorationFonts[item].setPreviewText(editTextStr)
                         adapter.notifyDataSetChanged()
                     }*/
                }
            })
            updateDecorationFonts(editText?.text.toString())
            adapter.notifyDataSetChanged()
        }
        return view
    }

    private fun updateDecorationFonts(text:String) {
        var editTextStr = text
        if (editTextStr.isEmpty()) {
            editTextStr= "hey!"
        }
        for (item in decorationFonts.indices) {
            decorationFonts[item].setPreviewText(editTextStr)
        }
    }

    override fun onAttach(context: Context) {
        super.onAttach(requireContext())
        this.context = context as Activity?
    }
}